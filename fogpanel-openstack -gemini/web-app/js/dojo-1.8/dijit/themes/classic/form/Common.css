/* claro/form/Common.css */
/*========================= common css =========================*/
/* 'dijitTextBox' refers to 'dijit(TextBox|DateTextBox|CurrencyTextBox|...)' */
.classic .dijitTextBox, .classic .dijitInputInner {
  color: #ffffff;
}
.classic .dijitValidationTextBoxError .dijitValidationContainer {
  background-color: #d46464;
  background-image: url("../form/images/error.png");
  background-position: top center;
  border: solid #d46464 0;
  width: 9px;
}
.classic .dijitTextBoxError .dijitValidationContainer {
  border-left-width: 1px;
}
.classic .dijitValidationTextBoxError .dijitValidationIcon {
  width: 0;
  background-color: transparent !important;
  /* so the INPUT doesn't obscure the border in rtl+a11y */

}
/* Padding for the input area of TextBox based widgets, and corresponding padding for the
 * down arrow button and the placeholder.   placeholder is explicitly listed  because
 * dijitPlaceHolder is absolutely positioned, so padding set on dijitInputField
 * won't affect it
 */
.classic .dijitTextArea, .classic .dijitInputField .dijitPlaceHolder {
  padding: 2px;
}
.classic .dijitSelect .dijitInputField, .classic .dijitTextBox .dijitInputField {
  padding: 1px 2px;
}
.dj_gecko .classic .dijitTextBox .dijitInputInner, .dj_webkit .classic .dijitTextBox .dijitInputInner {
  padding: 1px;
}
.classic .dijitSelect,
.classic .dijitSelect .dijitButtonContents,
.classic .dijitTextBox,
.classic .dijitTextBox .dijitButtonNode {
  /* color for (outer) border on *TextBox widgets, and border between input and buttons on ComboBox and Spinner */

  border-color: #656d78;
  -webkit-transition-property: background-color, border;
  -moz-transition-property: background-color, border;
  transition-property: background-color, border;
  -webkit-transition-duration: 0.35s;
  -moz-transition-duration: 0.35s;
  transition-duration: 0.35s;
}
.classic .dijitSelect, .classic .dijitTextBox {
  background-color: #243748;
  -moz-border-radius: 3px;
  border-radius: 3px;
  padding: 3px;
}
/* hover */
.classic .dijitSelectHover,
.classic .dijitSelectHover .dijitButtonContents,
.classic .dijitTextBoxHover,
.classic .dijitTextBoxHover .dijitButtonNode {
  border-color: #5b2f24;
  -webkit-transition-duration: 0.25s;
  -moz-transition-duration: 0.25s;
  transition-duration: 0.25s;
}
.classic .dijitTextBoxHover {
  background-color: #264460;
  background-image: -moz-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: -webkit-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: -o-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
}
/* error state */
.classic .dijitSelectError,
.classic .dijitSelectError .dijitButtonContents,
.classic .dijitTextBoxError,
.classic .dijitTextBoxError .dijitButtonNode {
  border-color: #d46464;
}
/* focused state */
.classic .dijitSelectFocused,
.classic .dijitSelectFocused .dijitButtonContents,
.classic .dijitTextBoxFocused,
.classic .dijitTextBoxFocused .dijitButtonNode {
  border-color: #5b2f24;
  -webkit-transition-duration: 0.1s;
  -moz-transition-duration: 0.1s;
  transition-duration: 0.1s;
}
.classic .dijitTextBoxFocused {
  background-color: #243748;
  background-image: -moz-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: -webkit-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: -o-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
}
.classic .dijitTextBoxFocused .dijitInputContainer {
  background: #243748;
}
.classic .dijitSelectErrorFocused,
.classic .dijitSelectErrorFocused .dijitButtonContents,
.classic .dijitTextBoxErrorFocused,
.classic .dijitTextBoxErrorFocused .dijitButtonNode {
  border-color: #ce5050;
}
/* disabled state */
.classic .dijitSelectDisabled,
.classic .dijitSelectDisabled .dijitButtonContents,
.classic .dijitTextBoxDisabled,
.classic .dijitTextBoxDisabled .dijitButtonNode {
  border-color: #4a4a4a;
}
.classic .dijitSelectDisabled, .classic .dijitTextBoxDisabled, .classic .dijitTextBoxDisabled .dijitInputContainer {
  background-color: #264460;
  background-image: none;
}
.classic .dijitSelectDisabled, .classic .dijitTextBoxDisabled, .classic .dijitTextBoxDisabled .dijitInputInner {
  /*	color: @disabled-text-color;*/

  color: #636262;
}
.dj_webkit .classic .dijitDisabled input {
  /* because WebKit lightens disabled input/textarea no matter what color you specify */

  color: #000000;
}
.dj_webkit .classic textarea.dijitTextAreaDisabled {
  /* because WebKit lightens disabled input/textarea no matter what color you specify */

  color: #000000;
}
/*========================= for special widgets =========================*/
/* Input boxes with an arrow (for a drop down) */
.classic .dijitSelect .dijitArrowButtonInner, .classic .dijitComboBox .dijitArrowButtonInner {
  background-image: url("../form/images/commonFormArrows.png");
  background-position: -35px 53%;
  background-repeat: no-repeat;
  margin: 0;
  width: 16px;
}
.classic .dijitComboBox .dijitArrowButtonInner {
  /*	border: 1px solid @arrowbutton-inner-border-color;	// white gutter around the arrow button*/

}
.classic .dijitToolbar .dijitComboBox .dijitArrowButtonInner {
  border: none;
}
.classic .dijitToolbar .dijitComboBox .dijitArrowButtonInner {
  border: none;
}
/* Add 1px vertical padding to the <input> where user types and the validation icon,
   to match the 1px border on arrow button */
.classic .dijitSelectLabel, .classic .dijitTextBox .dijitInputInner, .classic .dijitValidationTextBox .dijitValidationContainer {
  padding: 1px 0;
}
.classic .dijitComboBox .dijitButtonNode {
  background-color: #f04e23;
  /*	.standard-gradient("../");*/

}
/* Arrow "hover" effect:
 * The arrow button should change color whenever the mouse is in a position such that clicking it
 * will toggle the drop down.   That's either (1) anywhere over the ComboBox or (2) over the arrow
 * button, depending on the openOnClick setting for the widget.
 */
.classic .dijitComboBoxOpenOnClickHover .dijitButtonNode, .classic .dijitComboBox .dijitDownArrowButtonHover {
  background-color: #f43300;
}
.classic .dijitComboBoxOpenOnClickHover .dijitArrowButtonInner, .classic .dijitComboBox .dijitDownArrowButtonHover .dijitArrowButtonInner {
  background-position: -70px 53%;
}
/* Arrow Button change when drop down is open */
.classic .dijitComboBox .dijitHasDropDownOpen {
  background-color: #c12901;
  /*	.active-gradient("../");*/

  padding: 1px;
}
.dj_iequirks .classic .dijitComboBox .dijitHasDropDownOpen {
  padding: 1px 0;
}
.classic .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
  background-position: -70px 53%;
  border: 0 none;
}
/* disabled state */
.classic div.dijitComboBoxDisabled .dijitArrowButtonInner {
  /* specific selector set to override background-position setting from Button.js
	 * (.classic .dijitComboBoxDisabled .dijitArrowButtonInner) */

  background-position: 0 50%;
  background-color: #264460;
}
/*========================= hacks for browsers =========================*/
/* it seems the input[type="hidden"] has a height (16px) too... this may cause the widget's height calculate error */
.dj_ff3 .classic .dijitInputField input[type="hidden"] {
  display: none;
  height: 0;
  width: 0;
}
.dj_borderbox .classic .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
  width: 18px;
}
.dj_borderbox .classic .dijitComboBoxFocused .dijitHasDropDownOpen .dijitArrowButtonInner {
  width: 16px;
}
