/* Button | DropDownButton | ComboButton | ToggleButton
 * 
 * Styling Buttons mainly includes:
 * 
 * 1. Containers
 * 		.dijitButton
 * 		.dijitDropDownButton
 * 		.dijitComboButton
 * 		.dijitButtonNode - common button/arrow wrapper shared across all three button types 
 *
 * 2. Button text
 * 		.dijitButtonText
 * 
 * 3. Arrows - only for DropDownButton and ComboButton
 * 	     There are total four directions arrows - down, left, right, up:
 * 		.dijitArrowButtonInner - down arrow by default
 *      .dijitLeftArrowButton .dijitArrowButtonInner - left arrow
 *      .dijitRightArrowButton .dijitArrowButtonInner - right arrow
 *      .dijitUpArrowButton .dijitArrowButtonInner - up arrow
 * 
 * 4. States - Hover, Active, Disabled, e.g.
 * 		.dijitButtonHover .dijitButtonNode
 * 		.dijitButtonActive .dijitButtonNode
 * 		.dijitButtonDisabled .dijitButtonNode
 *      
 *      .dijitDisabled .dijitArrowButtonInner  - disabled arrow states 
 */

@import "../variables";

.classic .dijitButtonNode {
	/* rules for dijit.form.*Button widgets and arrow nodes on ComboBox, Spinner etc. */
	.transition-property(background-color);
 	.transition-duration(.3s);
  
       
}

.classic .dijitButton .dijitButtonNode,
.classic .dijitDropDownButton .dijitButtonNode,
.classic .dijitComboButton .dijitButtonNode,
.classic .dijitToggleButton .dijitButtonNode {
/*    border: 1px solid @button-border-color;*/
	padding: 6px 6px 6px 6px;

  }
  
  .classic .dijitButton,
  .classic .dijitDropDownButton,
  .classic .dijitComboButton,
  .classic .dijitToggleButton
  {
      &.fbtn .dijitButtonNode{
          border: none;
          border-radius: none;
      }
      &.fbtn{
          /* rules for the dijit.form.*Button widgets (see also ComboButton section below) */
           border:desaturate(darken(@fog-primary, 10), 20);
          .box-shadow(0 1px 1px rgba(0,0,0,0.15));
          background-color: desaturate(darken(@button-background-color, 10), 5);
/*           .alpha-white-gradient(1, 0px, 0, 3px, 0.75, 100%);*/
          // Alpha transparency layer to add gradient to above background color.
          // Use CSS gradient with fallback to image for IE.
          /*	background-image: url("images/buttonEnabled.png");*/
          background-repeat: repeat-x;
          	
          _background-image: none;	// IE6 can't handle background-color and background-image at once.
          
/*          &:active {
              -webkit-box-shadow:0px 2px 2px 0px rgba(0,0,0,0.3) inset;
              -moz-box-shadow:0px 2px 2px 0px rgba(0,0,0,0.3) inset;
              box-shadow:0px 2px 2px 0px rgba(0,0,0,0.3) inset;
              background: rgb(48, 98, 139);
              opacity: 1;
          }*/
          
          &:hover{
              text-decoration: none;
/*              opacity: 0.87;*/
              color:@text-color;
          }
          
          &.large {
              font-size: 13px;
              padding: 10px 16px;

          }
          
          &.small {
              font-size: 11px;
              padding: 5px 9px;
          }
          
              &.default{
              background-color: @primary-color;
/*              color: @text-color;*/
              border:1px solid @base-border-color;
              .alpha-white-gradient(1, 0px, 0, 3px, 0.75, 100%);
              
              &:hover{
                background-color: desaturate(darken(@button-hovered-background-color, 10), 20);
	       
/*                     opacity: 0.87;*/
              }
              &:active{

              }
          }
          
          &.inverse{
              background-color: @fog-inverse;
              color: @white-color;
              border:1px solid desaturate(darken(@fog-inverse, 10), 20);
              
              &:hover{
                   background-color: saturate(lighten(@fog-inverse, 10), 20);
                  .transition-duration(.2s);
/*                     opacity: 0.87;*/
              }
              &:active{

              }
          }

          &.primary{
              background-color: @fog-primary;
              color: @white-color;
              border:1px solid desaturate(lighten(@fog-primary, 10), 20);

              &:hover{
                   background-color: desaturate(lighten(@fog-primary, 10), 20);
                  .transition-duration(.2s);
                     opacity: 0.87;
              }
              &:active{

              }
          }

          &.success{
              background-color: @fog-success;
              color: @white-color;
              border:1px solid desaturate(lighten(@fog-success, 10), 20);

              &:hover{
                   background-color: desaturate(lighten(@fog-success, 10), 20);
                  .transition-duration(.2s);
                     opacity: 0.87;
              }
              &:active{

              }
          }


          &.info{
              background-color: @fog-info;
              color: @white-color;
              border:1px solid desaturate(lighten(@fog-info, 10), 20);

              &:hover{
                  background-color: desaturate(lighten(@fog-info, 10), 20);
                  .transition-duration(.2s);
                     opacity: 0.87;
              }
              &:active{

              }
          }

          &.danger{
              background-color: @fog-danger;
              color: @white-color;
              border:desaturate(lighten(@fog-danger, 10), 20);

              &:hover{
                   background-color: desaturate(lighten(@fog-danger, 5), 20);
                  .transition-duration(.2s);
                     opacity: 0.87;
              }
              &:active{

              }
          }


      }
  }

.classic .dijitComboButton .dijitArrowButton {
	border-left-width: 0;
	padding: 4px 2px 4px 2px;	/* TODO: still needed? */
}

/*arrow styles for down/up/left/right directions*/
.classic .dijitArrowButtonInner {
	width: 15px;
	height: 15px;
	margin: 0 auto;
	background-image:url("../@{image-form-button-arrows}");
	background-repeat:no-repeat;
	background-position:-51px 53%;
}
.classic .dijitLeftArrowButton .dijitArrowButtonInner {
	background-position: -77px 53%;
}
.classic .dijitRightArrowButton .dijitArrowButtonInner {
	background-position: -26px 53%;
}
.classic .dijitUpArrowButton .dijitArrowButtonInner {
	background-position: 0 53%;
}
.classic .dijitDisabled .dijitArrowButtonInner {
	background-position: -151px 53%;
}
.classic .dijitDisabled .dijitLeftArrowButton .dijitArrowButtonInner {
	background-position: -177px 53%;
}
.classic .dijitDisabled .dijitRightArrowButton .dijitArrowButtonInner {
	background-position: -126px 53%;
}
.classic .dijitDisabled .dijitUpArrowButton .dijitArrowButtonInner {
	background-position: -100px 53%;
}

.classic .dijitButtonText {
	padding: 0 0.3em;
	text-align: center;
}





/* hover status */
.classic .dijitButtonHover .dijitButtonNode,
.classic .dijitDropDownButtonHover .dijitButtonNode,
.classic .dijitComboButton .dijitButtonNodeHover, 
.classic .dijitComboButton .dijitDownArrowButtonHover,
.classic .dijitToggleButtonHover .dijitButtonNode {
/*	background-color: desaturate(darken(@button-hovered-background-color, 10), 20);
	color:@text-color;*/
 	.transition-duration(.2s);
}

/* active, checked status */
.classic .dijitButtonActive .dijitButtonNode, 
.classic .dijitDropDownButtonActive .dijitButtonNode,
.classic .dijitComboButtonActive .dijitButtonNode,
.classic .dijitToggleButtonActive .dijitButtonNode,
.classic .dijitToggleButtonChecked .dijitButtonNode {
	background-color: desaturate(darken(@button-pressed-background-color, 10), 20);
	.box-shadow(inset 0px 1px 1px rgba(0, 0, 0, 0.2));
 	.transition-duration(.1s);
}

/* disabled status */
.classic .dijitButtonDisabled,
.classic .dijitDropDownButtonDisabled,
.classic .dijitComboButtonDisabled,
.classic .dijitToggleButtonDisabled {
	background-image: none;
	outline: none;
}

.classic .dijitButtonDisabled .dijitButtonNode,
.classic .dijitDropDownButtonDisabled .dijitButtonNode,
.classic .dijitComboButtonDisabled .dijitButtonNode,
.classic .dijitToggleButtonDisabled .dijitButtonNode {
	background-color: @disabled-background-color;
	border: solid 1px @disabled-border-color;
	color: @disabled-text-color;
	.box-shadow(0 0 0 rgba(0,0,0,0));

	// Change the gradient from light to dark.
	// Again using CSS gradient with fallback to image for IE.
	background-image: url("images/buttonDisabled.png");
	.alpha-white-gradient(1, 0%, 0, 40%);
	_background-image: none;	// IE6 can't handle background-color and background-image at once.
}

.classic .dijitComboButtonDisabled .dijitArrowButton{ 
	border-left-width: 0;
}
/* for ComboButton */
.classic table.dijitComboButton {
	border-collapse: separate;	/* override dijit.css so that ComboBox rounded corners work */
}

.classic .dijitComboButton .dijitStretch {
	.border-radius(@button-border-radius 0 0 @button-border-radius);
}
.classic .dijitComboButton .dijitArrowButton {
	.border-radius(0 @button-border-radius @button-border-radius 0);
}
